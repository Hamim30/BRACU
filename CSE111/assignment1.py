# -*- coding: utf-8 -*-
"""Assignment1_20301443_HamimIbnaNasim_CSE111.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14iAGxnVe6Wjef75itlYXQ1ytO7xH51Ze

# String
## Task 1
"""

##String task 1
p=input()
lc=0
uc=0
for c in p:
    if c>="a" and c<= "z":
        lc += 1
    elif c<= "Z"and  c>= "A":
        uc += 1
b=""
if uc> lc:
    b=p.upper()
else:
    b=p.lower()
print(b)

"""## Task 2"""

##String task 2
user_input=input("Enter a string :")
alphabet_found = False
number_found = False
for char in user_input:
    if (char>="a" and char <="z") or (char>="A" and char<="Z"):
        alphabet_found = True
    elif char>="0" and char <="9":
        number_found = True
if alphabet_found == True and number_found == True:
    print("MIXED")
elif alphabet_found == False and number_found == True:
    print("NUMBER")
elif alphabet_found == True and number_found == False:
    print("WORD")

"""## Task 3"""

##String task 3
user_input=input("Enter a string :")
index_of_substring=[]
for index in range (len(user_input)):
    if user_input[index]  >="A" and user_input[index]<="Z":
        index_of_substring.append(index)
        
final_output = user_input[index_of_substring[0]+1:index_of_substring[1]]

if final_output=="":
    print("BLANK")
else:
    print(final_output)

"""## Task 4"""

##String task 4 
user_input=input("Enter a sentence :")
if "too good" in user_input:
    print(user_input.replace("too good", "excellent"))
else:
    print(user_input)

"""## Task 5"""

##String task 5
user_input=input("Enter your words :").split(",")
final_result=""
for char in user_input[0]:
    if char in user_input[1]:
        final_result += char
for char_two in user_input[1]:
    if char_two in user_input[0]:
        final_result+=char_two   
if final_result=="":
    print("Nothing in common")
else:
    print(final_result)

"""## Task 6"""

##String task 6
user_input = input("Enter a password :")
uppercase_found = False
lowercase_found= False
number_found = False
special_character_found=False
special_characters=["_","$","#","@"]

for char in user_input:
    if char >="A" and char <="Z":
        uppercase_found = True
    elif char >="a" and char <="z":
        lowercase_found = True
    elif char >= "0" and char <="9":
        number_found = True
    elif char in special_characters:
        special_character_found = True
        
final_result=""

if uppercase_found == False:
    final_result+=(" Uppercase character missing,")
if lowercase_found == False:
    final_result+=(" Lowercase character missing,")
if number_found == False:
    final_result+=(" Digit missing,")
if special_character_found==False:
    final_result+=(" Special character missing,")
elif uppercase_found == True  and lowercase_found== True and number_found ==True and special_character_found== True:
    final_result+=(" Ok,")
print((final_result).strip(" ,"))

"""# List
## Task 1
"""

##LIST task 1
user_list=[]
while True:
    user_input=input("Enter elements for your list :")
    if user_input=="STOP":
        break
    else:
        user_list.append(int(user_input))
        
new_list=[]
frequency_list=[]
for digit in user_list:
    count=0
    for counter in (user_list):
        if counter==digit:
            count+=1
    if digit not in new_list:
        new_list.append(digit)
        frequency_list.append(count)
        
for counter in range(len(new_list)):
    print("{} - {} times".format(new_list[counter],frequency_list[counter]))

"""## Task 2"""

##List task 2
user_input=int(input("Enter quantity of lists :"))
all_lists=[]
for counter in range(user_input):
    user_list=[int(elements) for elements in (input("Enter a list :").split())]
    all_lists.append(user_list)

highest_sum=0
for lists in all_lists:
    sum=0
    for elements in lists:
        sum +=int(elements)
    if sum > highest_sum:
        highest_sum=sum
        highest_list= lists
print(highest_sum)
print(highest_list)

"""## Task 3"""

##List task 3
o=[int(numbers) for numbers in (input().split())]
t=[int(numbers) for numbers in (input(").split())]
r = []
for a in t:
    for b in o:
        r.append((a)*(b))
print(r)

"""## Task 4"""

##List task 4
while True:
    given_list=input("Enter elements for list :")
    if given_list=="STOP":
        break
    else:
        user_list=[int(number) for number in given_list.split()]
        
    absolute_differences = []
    
    for counter in range (len(user_list)-1):
        differences = user_list[counter] - user_list[counter+1]
        absolute_differences.append(abs(differences))

    ub_jumper =True
    for char in range(1,len(absolute_differences)+1):
        if char not in absolute_differences:
            ub_jumper = False
    if ub_jumper == False:
        print("Not UB Jumper")
    else:
        print("UB Jumper")

"""## Task 5"""

##List task 5
user_input=input("Enter a string :")
sorted_lowercase=[]
sorted_uppercase=[]
sorted_number=[]

for char in user_input:
    if char >='A' and char <="Z":
        sorted_uppercase.append(char)
    elif char >='a' and char <="z":
        sorted_lowercase.append(char)
    elif char>="0" and char <="9":
        sorted_number.append(char)
        
sorted_lowercase=sorted(sorted_lowercase)
sorted_uppercase=sorted(sorted_uppercase)
sorted_number=sorted(sorted_number)

sorted_even_number=[]
sorted_odd_number=[]
for digits in sorted_number:
    if int(digits)%2==0:
        sorted_even_number.append(digits)
    else:
        sorted_odd_number.append(digits)
final_result=sorted_lowercase + sorted_uppercase + sorted_odd_number + sorted_even_number
for char in final_result:
    print(char,end="")

"""## Task 6"""

p=[ind(i) for i in input().split()]
l=[int(i) for i in (input().split())]
r=0

for c in l:
    if (5-c)>=p[1]:
        r+=1


print(r//3)

"""# Dictionary and Tuple
## Task 1
"""

user_input_one = input("Enter first dictionary :").split(",")
user_input_two = input("Enter second dictionary :").split(",")


def makeDictionary(a_dict):
    my_dict=[]
    final_dict={}
    for element in a_dict:
        my_dict.append(element.split(":"))
    for index in (my_dict):
        final_dict[index[0]]=int(index[int(1)])
    return final_dict

dict_one=makeDictionary(user_input_one) 
dict_two=makeDictionary(user_input_two) 

new_dict=dict_one

for keys, values in dict_two.items():
    if keys in new_dict:
        new_dict[keys]+=values
    else:
        new_dict[keys]=values
print(new_dict)
unique_values=[]

for values in new_dict.values():
    if values not in unique_values:
        unique_values.append(values)
        
print("Values:{} ".format(tuple(sorted(unique_values))))

"""## Task 2"""

user_list=[]
while True:
    user_input=input("Enter numbers :")
    if user_input=="STOP":
        break
    else:
        user_list.append(int(user_input))
new_dict={}
for numbers in user_list:
    new_dict[numbers] = new_dict.get(numbers,0)+1
    
for key,value in new_dict.items():
    print("{} - {} times".format(key,value))

"""## Task 3"""

given_dict=input("Enter a dictionary :").split(",")

def makeDictionary(a_dict):
    my_dict=[]
    final_dict={}
    for element in a_dict:
        my_dict.append(element.split(":"))
    for index in (my_dict):
        final_dict[index[0]]=(index[int(1)])
    return final_dict
user_dict= makeDictionary(given_dict)

n={}
for k, v in  p.items():
    if v in n:
        n[v]+=[k]
    else:
        n[v]=[k]
print(n)

"""## Task 4"""

user_string_one=input("Enter first word :")
user_string_two=input("Enter second word :")

def sorted_dict_frequency(a_string):
    a_dict={}
    for char in a_string:
        if char in a_dict:
            a_dcit[char]+=1
        else:
            a_dict[char]=1
    a_dict=sorted(a_dict)
    return a_dict

string_one_frequency=sorted_dict_frequency(user_string_one)
string_two_frequency=sorted_dict_frequency(user_string_two)

if string_one_frequency == string_two_frequency:
    print("Those strings are anagrams.")
else:
    print("Those strings are not anagrams.")

"""## Task 5"""

numeric_keypad={1:".,?!:",2:"ABC",3:"DEF",4:"GHI",5:"JKL",6:"MNO",7:"PQRS",8:"TUV",9:"WXYZ",0:" "}
user_input=input("Enter a string :")
press_key=""
for char in user_input:
    for key,value in numeric_keypad.items():
        if char.upper() in value:
            for counter in range(len(value)):
                press_key += str(key)
                if char.upper() == value[counter]:
                    break
    
print(press_key)

d1={'a': 400, ' b': 300, ' f': 200, ' d': 700, ' c': 200}
print(d1.items())
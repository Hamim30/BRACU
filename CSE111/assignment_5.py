# -*- coding: utf-8 -*-
"""20301443_11_Hamim_Ibna_Nasim_Assignment 5 cse111.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jfU3TBuIIsDjczLZwKuKUyZVomuzdtFv
"""

class Student:
    def __init__(self,name,id,department):
        self.name=name
        self.id=id
        self.department= department
    def advise(self,*args):
        self.credit_hour=len(args)*3
        course=[]
        for i in args:
            course.append(i)
        for j in course:
            print(j,end=',')
        self.course=j    
        print(self.name+', you have taken '+str(self.credit_hour)+'.0'+' credits')
        print('List of courses:',self.course)
        if self.credit_hour== 9:
            print('Status: Ok')
        elif self.credit_hour<9:
            print('Status: You have to take at least '+ str(self.credit_hour/3)+' more course.')
        elif self.credit_hour>9:
            print('You have to drop at least '+ str(self.credit_hour/3)+' course.')
        
    def details(self):
        return 'Name: '+self.name+'\n'+'ID: '+self.id+'\n'+'Department: '+self.department
    
  




s1 = Student("Alice","20103012","CSE")
s2 = Student("Bob", "18301254","EEE")
s3 = Student("Carol", "17101238","CSE")
print("##########################")
print(s1.details())
print("##########################")
print(s2.details())
print("##########################")
s1.advise("CSE110", "MAT110", "PHY111")
print("##########################")
s2.advise("BUS101", "MAT120")
print("##########################")
s3.advise("MAT110", "PHY111", "ENG102", "CSE111", "CSE230")

"""## Task 1"""

class Marks:
    def __init__(self,value):
        self.value=value
    def __add__(self,other):
        total = self.value+other.value
        return Marks(total)
Q1 = Marks(int(input("Quiz 1 (out of 10): ")))
Q2 = Marks(int(input("Quiz 2 (out of 10): ")))
Lab = Marks(int(input("Lab (out of 30): ")))
Mid = Marks(int(input("Mid (out of 20): ")))
Final = Marks(int(input("Final (out of 30): ")))
total = Q1 + Q2 + Lab + Mid + Final
print("Total marks: {}".format(total.value))

"""## Task 2"""

class Teacher:
    def __init__(self,name,dept):
        self.__name=name
        self.__dept=dept
        self.__course=[]
    def addCourse(self,c): #Course("CSE 110 Programming Language I")
        self.__course+=[c.course]
    def printDetail(self):
        print("====================================")
        print("Name:",self.__name)
        print("Department:",self.__dept)
        print("List of courses")
        print("====================================")
        for course in self.__course:
            print(course)
        print("====================================")
      
class Course:
    def __init__(self,course):
        self.course=course

t1 = Teacher("Saad Abdullah", "CSE")
t2 = Teacher("Mumit Khan", "CSE")
t3 = Teacher("Sadia Kazi", "CSE")
c1 = Course("CSE 110 Programming Language I")
c2 = Course("CSE 111 Programming Language-II")
c3 = Course("CSE 220 Data Structures")
c4 = Course("CSE 221 Algorithms")
c5 = Course("CCSE 230 Discrete Mathematics")
c6 = Course("CSE 310 Object Oriented Programming")
c7 = Course("CSE 320 Data Communications")
c8 = Course("CSE 340 Computer Architecture")
t1.addCourse(c1)
t1.addCourse(c2)
t2.addCourse(c3)
t2.addCourse(c4)
t2.addCourse(c5)
t3.addCourse(c6)
t3.addCourse(c7)
t3.addCourse(c8)
t1.printDetail()
t2.printDetail()
t3.printDetail()

"""## Task 3 """

class Team:
    def __init__(self,name=""):
        self.__setName=name
        self.__player_name=[]
    def setName(self,name):
        self.__setName=name
    def addPlayer(self,c):
        self.__player_name+=[c.player_name]
    def printDetail(self):
        print("=====================")
        print("Team: ",self.__setName)
        print("List of Players:")
        print(self.__player_name)
        print("=====================")
class Player:
    def __init__(self,player_name):
        self.player_name=player_name

b = Team()
b.setName('Bangladesh')
mashrafi = Player("Mashrafi")
b.addPlayer(mashrafi)
tamim = Player("Tamim")
b.addPlayer(tamim)
b.printDetail()
a = Team("Australia")
ponting = Player("Ponting")
a.addPlayer(ponting)
lee = Player("Lee")
a.addPlayer(lee)
a.printDetail()

"""## Task 4"""

class Color:
    def __init__(self,color):
        self.color=color
    def __add__(self,other):
        if self.color=="red" and other.color=="yellow":
            return "Orange"
        elif self.color=="red" and other.color=="blue":
            return "Violet"
        elif self.color=="yellow" and other.color=="blue":
            return "Green"
        
C1 = Color(input("First Color: ").lower())
C2 = Color(input("Second Color: ").lower())
C3 = C1 + C2
print("Color formed:", C3)

"""## Task 5"""

import math
class Circle:
    def __init__(self,radius):
        self.__radius=radius
    def setRadius(self):
        self.__radius=radius
    def getRadius(self):
        return self.__radius
    def area(self):
        area=math.pi*self.__radius**2
        return area
    def __add__(self,other):
        self.__radius+=other.__radius
        return Circle(self.__radius)
c1 = Circle(4)
print("First circle radius:" , c1.getRadius())
print("First circle area:" ,c1.area())
c2 = Circle(5)
print("Second circle radius:" ,c2.getRadius())
print("Second circle area:" ,c2.area())
c3 = c1 + c2
print("Third circle radius:" ,c3.getRadius())
print("Third circle area:" ,c3.area())

"""## Task 6"""

class Triangle:
    def __init__(self,base,height):
        self.__base=base
        self.__height=height
    def setBase(self,base):
        self.__base=base
    def setHeight(self,height):
        self.__height=height
    def getBase(self):
        return self.__base
    def getHeight(self):
        return self.__height
    def area(self):
        area=(0.5)*self.__base*self.__height
        return area
    def __sub__(self,other):
        self.__base-=other.__base
        self.__height-=other.__height
        return Triangle(self.__base,self.__height)
t1 = Triangle(10, 5)
print("First Triangle Base:" , t1.getBase())
print("First Triangle Height:" , t1.getHeight())
print("First Triangle area:" ,t1.area())
t2 = Triangle(5, 3)
print("Second Triangle Base:" , t2.getBase())
print("Second Triangle Height:" , t2.getHeight())
print("Second Triangle area:" ,t2.area())
t3 = t1 - t2
print("Third Triangle Base:" , t3.getBase())
print("Third Triangle Height:" , t3.getHeight())
print("Third Triangle area:" ,t3.area())

"""## Task 7"""

class Dolls:
    def __init__(self,doll,price=0):
        self.doll=doll
        self.price=price
    def detail(self):
        print_detail="Doll: "+self.doll+"\n"+"Total Price: "+str(self.price)+"taka"
        return print_detail
    def __gt__(self,other):
        if self.price>other.price:
            return True
        else:
            return False
    def __add__(self,other):
        self.doll+=other.doll
        self.price+=other.price
        return Dolls(self.doll,self.price)
obj_1 = Dolls("Tweety", 2500)
print(obj_1.detail())
if obj_1 > obj_1:
    print("Congratulations! You get the Tweety as a gift!")
else:
    print("Thank you!")
print("=========================")
obj_2 = Dolls("Daffy Duck", 1800)
print(obj_2.detail())
if obj_2 > obj_1:
    print("Congratulations! You get the Tweety as a gift!")
else:
    print("Thank you!")
print("=========================")
obj_3 = Dolls("Bugs Bunny", 3000)
print(obj_3.detail())
if obj_3 > obj_1:
    print("Congratulations! You get the Tweety as a gift!")
else:
    print("Thank you!")
print("=========================")
obj_4 = Dolls("Porky Pig", 1500)
print(obj_4.detail())
if obj_4 > obj_1:
    print("Congratulations! You get the Tweety as a gift!")
else:
    print("Thank you!")
print("=========================")
obj_5 = obj_2 + obj_3
print(obj_5.detail())
if obj_5 > obj_1:
    print("Congratulations! You get the Tweety as a gift!")
else:
    print("Thank you!")

"""## Task 8"""

class Coordinates:
    def __init__(self,coordinate1,coordinate2):
        self.coordinate1=coordinate1
        self.coordinate2=coordinate2
    def __sub__(self,other):
        sub1=self.coordinate1-other.coordinate1
        sub2=self.coordinate2-other.coordinate2
        return Coordinates(sub1,sub2) 
    def __mul__(self,other):
        mul1=self.coordinate1*other.coordinate1
        mul2=self.coordinate2*other.coordinate2
        return Coordinates(mul1,mul2)
    def __eq__(self,other):
        if self.coordinate1==other.coordinate1 and self.coordinate2==other.coordinate2:
            return "The calculated coordinates are the same."
        else:
            return "The calculated coordinates are NOT the same."
    def detail(self):
         return self.coordinate1,self.coordinate2
p1 = Coordinates(int(input()),int(input()))
p2 = Coordinates(int(input()),int(input()))
p4 = p1 - p2
print(p4.detail())
p5 = p1 * p2
print(p5.detail())
point_check = (p4 == p5)
print(point_check)